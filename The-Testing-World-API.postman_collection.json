{
	"info": {
		"_postman_id": "a4a78bb3-8957-486e-94c3-5ab84d60fda4",
		"name": "The-Testing-World-API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "31249794"
	},
	"item": [
		{
			"name": "Get Student",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1 No Question\r",
							"var code = pm.response.code\r",
							"\r",
							"switch(code){\r",
							"    case 200:\r",
							"\r",
							"        pm.test(\"Status code is 200 OK\", function () {\r",
							"            pm.response.to.have.status(200);\r",
							"        });\r",
							"\r",
							"    break;\r",
							"\r",
							"    case 404:\r",
							"    pm.test(\"Not Found\") \r",
							"    break;\r",
							"    \r",
							"    default:\r",
							"    pm.test(\"Something went wrong\")\r",
							"\r",
							"}\r",
							"//2 No Question\r",
							"var json = pm.response.json()\r",
							"console.log(json.length)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/studentsDetails",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"studentsDetails"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Student",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1 No Question\r",
							"var code = pm.response.code\r",
							"\r",
							"switch(code){\r",
							"    case 201:\r",
							"\r",
							"        pm.test(\"Status code is 201 Created\", function () {\r",
							"            pm.response.to.have.status(201);\r",
							"        });\r",
							"   \r",
							"    break;\r",
							"\r",
							"    case 404:\r",
							"    pm.test(\"Not Found\") \r",
							"    break;\r",
							"\r",
							"    default:\r",
							"    pm.test(\"Something went wrong\")\r",
							"\r",
							"}\r",
							"\r",
							"var jsonData = pm.response.json()\r",
							"pm.environment.set (\"id\", jsonData.id)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"first_name\": \"sample string 2\",\r\n\"middle_name\": \"sample string 3\",\r\n\"last_name\": \"sample string 4\",\r\n\"date_of_birth\": \"sample string 5\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/studentsDetails",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"studentsDetails"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Specific Student",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1 No Question\r",
							"var code = pm.response.code\r",
							"\r",
							"switch(code){\r",
							"    case 200:\r",
							"\r",
							"        pm.test(\"Status code is 200 OK\", function () {\r",
							"            pm.response.to.have.status(200);\r",
							"        });\r",
							"   \r",
							"    break;\r",
							"\r",
							"    case 404:\r",
							"    pm.test(\"Not Found\") \r",
							"    break;\r",
							"\r",
							"    default:\r",
							"    pm.test(\"Something went wrong\")\r",
							"\r",
							"}\r",
							"//2 No Question\r",
							"var jsonData = pm.response.json()\r",
							"pm.environment.set(\"iD\", jsonData.data.id)\r",
							"pm.test(\"Id Validation\", function () {\r",
							"    pm.expect(jsonData.data.id).to.eql(pm.environment.get(\"iD\"))\r",
							"});\r",
							"\r",
							"pm.environment.set(\"firstName\", jsonData.data.first_name)\r",
							"pm.test(\"First Name Validation\", function () {\r",
							"    pm.expect(jsonData.data.first_name).to.eql(pm.environment.get(\"firstName\"))\r",
							"});\r",
							"\r",
							"pm.environment.set(\"middleName\", jsonData.data.middle_name)\r",
							"pm.test(\"Middle Name Validation\", function () {\r",
							"    pm.expect(jsonData.data.middle_name).to.eql(pm.environment.get(\"middleName\"))\r",
							"});\r",
							"\r",
							"pm.environment.set(\"lastName\", jsonData.data.last_name)\r",
							"pm.test(\"Last Name Validation\", function () {\r",
							"    pm.expect(jsonData.data.last_name).to.eql(pm.environment.get(\"lastName\"))\r",
							"});\r",
							"\r",
							"pm.environment.set(\"dateofBirth\", jsonData.data.date_of_birth)\r",
							"pm.test(\"Date of Birth Validation\", function () {\r",
							"    pm.expect(jsonData.data.date_of_birth).to.eql(pm.environment.get(\"dateofBirth\"))\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/studentsDetails/{{id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"studentsDetails",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Technical Skills",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1 No Question\r",
							"var code = pm.response.code\r",
							"\r",
							"switch(code){\r",
							"    case 200:\r",
							"\r",
							"        pm.test(\"Status code is 200 OK\", function () {\r",
							"            pm.response.to.have.status(200);\r",
							"        });\r",
							"   \r",
							"    break;\r",
							"\r",
							"    case 404:\r",
							"    pm.test(\"Not Found\") \r",
							"    break;\r",
							"\r",
							"    default:\r",
							"    pm.test(\"Something went wrong\")\r",
							"\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"id\": 1,\r\n\"language\": [\r\n\"sample string 1\",\r\n\"sample string 2\"\r\n],\r\n\"yearexp\": \"sample string 2\",\r\n\"lastused\": \"sample string 3\",\r\n\"st_id\": {{id}}\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/technicalskills",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"technicalskills"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Student Address",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1 No Question\r",
							"var code = pm.response.code\r",
							"\r",
							"switch(code){\r",
							"    case 200:\r",
							"\r",
							"        pm.test(\"Status code is 200 OK\", function () {\r",
							"            pm.response.to.have.status(200);\r",
							"        });\r",
							"   \r",
							"    break;\r",
							"\r",
							"    case 404:\r",
							"    pm.test(\"Not Found\") \r",
							"    break;\r",
							"\r",
							"    default:\r",
							"    pm.test(\"Something went wrong\")\r",
							"\r",
							"}\r",
							"//2 No Question\r",
							"var jsonData = pm.response.json()\r",
							"pm.environment.set(\"staTus\", jsonData.status)\r",
							"pm.test(\"Status Validation\", function () {\r",
							"    pm.expect(jsonData.status).to.eql(pm.environment.get(\"staTus\"))\r",
							"});\r",
							"\r",
							"pm.environment.set(\"messAge\", jsonData.msg)\r",
							"pm.test(\"Message Validation\", function () {\r",
							"    pm.expect(jsonData.msg).to.eql(pm.environment.get(\"messAge\"))\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"Permanent_Address\": {\r\n\"House_Number\": \"sample string 1\",\r\n\"City\": \"sample string 2\",\r\n\"State\": \"sample string 3\",\r\n\"Country\": \"sample string 4\",\r\n\"PhoneNumber\": [\r\n{\r\n\"Std_Code\": \"sample string 1\",\r\n\"Home\": \"sample string 2\",\r\n\"Mobile\": \"sample string 3\"\r\n},\r\n{\r\n\"Std_Code\": \"sample string 1\",\r\n\"Home\": \"sample string 2\",\r\n\"Mobile\": \"sample string 3\"\r\n}\r\n]\r\n},\r\n\"stId\": {{id}}\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/addresses",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"addresses"
					]
				}
			},
			"response": []
		},
		{
			"name": "Final Student Details",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1 No Question\r",
							"var code = pm.response.code\r",
							"\r",
							"switch(code){\r",
							"    case 200:\r",
							"\r",
							"        pm.test(\"Status code is 200 OK\", function () {\r",
							"            pm.response.to.have.status(200);\r",
							"        });\r",
							"   \r",
							"    break;\r",
							"\r",
							"    case 404:\r",
							"    pm.test(\"Not Found\") \r",
							"    break;\r",
							"\r",
							"    default:\r",
							"    pm.test(\"Something went wrong\")\r",
							"\r",
							"}\r",
							"\r",
							"//2 No Question\r",
							"var jsonData = pm.response.json()\r",
							"pm.environment.set(\"languAge\", jsonData.data.TechnicalDetails[0].language)\r",
							"pm.test(\"Language Validation\", function () {\r",
							"    pm.expect(jsonData.data.TechnicalDetails[0].language).to.eql(pm.environment.get(\"languAge\"))\r",
							"});\r",
							"\r",
							"pm.environment.set(\"yearofExperience\", jsonData.data.TechnicalDetails[0].yearexp)\r",
							"pm.test(\"Year of Experience Validation\", function () {\r",
							"    pm.expect(jsonData.data.TechnicalDetails[0].yearexp).to.eql(pm.environment.get(\"yearofExperience\"))\r",
							"});\r",
							"\r",
							"pm.environment.set(\"houseNumber\", jsonData.data.Address[0].Permanent_Address.House_Number)\r",
							"pm.test(\"House Number Validation\", function () {\r",
							"    pm.expect(jsonData.data.Address[0].Permanent_Address.House_Number).to.eql(pm.environment.get(\"houseNumber\"))\r",
							"});\r",
							"\r",
							"pm.environment.set(\"ciTy\", jsonData.data.Address[0].Permanent_Address.City)\r",
							"pm.test(\"City Validation\", function () {\r",
							"    pm.expect(jsonData.data.Address[0].Permanent_Address.City).to.eql(pm.environment.get(\"ciTy\"))\r",
							"});\r",
							"\r",
							"pm.environment.set(\"counTry\", jsonData.data.Address[0].Permanent_Address.Country)\r",
							"pm.test(\"Country Validation\", function () {\r",
							"    pm.expect(jsonData.data.Address[0].Permanent_Address.Country).to.eql(pm.environment.get(\"counTry\"))\r",
							"});\r",
							"\r",
							"pm.environment.set(\"moBile\", jsonData.data.Address[0].Permanent_Address.PhoneNumber[0].Mobile)\r",
							"pm.test(\"Mobile Validation\", function () {\r",
							"    pm.expect(jsonData.data.Address[0].Permanent_Address.PhoneNumber[0].Mobile).to.eql(pm.environment.get(\"moBile\"))\r",
							"});\r",
							"\r",
							"pm.environment.set(\"currentAddress\", jsonData.data.Address[0].Current_Address)\r",
							"pm.test(\"Current Address Validation\", function () {\r",
							"    pm.expect(jsonData.data.Address[0].Current_Address).to.eql(pm.environment.get(\"currentAddress\"))\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/FinalStudentDetails/{{id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"FinalStudentDetails",
						"{{id}}"
					]
				}
			},
			"response": []
		}
	]
}